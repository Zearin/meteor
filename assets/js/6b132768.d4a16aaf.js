"use strict";(self.webpackChunkmeteor=self.webpackChunkmeteor||[]).push([[836],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),f=o,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||a;return t?r.createElement(d,s(s({ref:n},p),{},{components:t})):r.createElement(d,s({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5991:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={},c="Sinks",l={unversionedId:"reference/sinks",id:"reference/sinks",isDocsHomePage:!1,title:"Sinks",description:"Console",source:"@site/docs/reference/sinks.md",sourceDirName:"reference",slug:"/reference/sinks",permalink:"/meteor/docs/reference/sinks",editUrl:"https://github.com/odpf/meteor/edit/master/docs/docs/reference/sinks.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Processors",permalink:"/meteor/docs/reference/processors"},next:{title:"Guide",permalink:"/meteor/docs/contribute/guide"}},p=[{value:"Console",id:"console",children:[{value:"Sample usage of console sink",id:"sample-usage-of-console-sink",children:[]}]},{value:"Compass",id:"compass",children:[{value:"Sample usage of compass sink",id:"sample-usage-of-compass-sink",children:[]}]},{value:"File",id:"file",children:[]}],m={toc:p};function u(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sinks"},"Sinks"),(0,a.kt)("h2",{id:"console"},"Console"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"console")),(0,a.kt)("p",null,"Print data to stdout."),(0,a.kt)("h3",{id:"sample-usage-of-console-sink"},"Sample usage of console sink"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"sinks:\n - name: console\n")),(0,a.kt)("h2",{id:"compass"},"Compass"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"compass")),(0,a.kt)("p",null,"Upload metadata to a given ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/odpf/meteor/tree/cb12c3ecf8904cf3f4ce365ca8981ccd132f35d0/docs/reference/github.com/odpf/compass/README.md"},"Compass"),". Request will be send via HTTP to given host."),(0,a.kt)("h3",{id:"sample-usage-of-compass-sink"},"Sample usage of compass sink"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'sinks:\n - name: compass\n   config:\n     host: https://compass.com\n     type: sample-compass-type\n     mapping:\n       new_fieldname: "json_field_name"\n       id: "resource.urn"\n       displayName: "resource.name"\n')),(0,a.kt)("h2",{id:"file"},"File"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"file")),(0,a.kt)("p",null,"Sinks metadata to a file in ",(0,a.kt)("inlineCode",{parentName:"p"},"json/yaml")," format as per the config defined."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'sinks:\n    name: file\n    config:\n        path: "./dir/sample.yaml"\n        format: "yaml"\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Notes"))),(0,a.kt)("p",null,"Compass' Type requires certain fields to be sent, hence why ",(0,a.kt)("inlineCode",{parentName:"p"},"mapping")," config is needed to map value from any of our metadata models to any field name when sending to Compass. Supports getting value from nested fields."))}u.isMDXComponent=!0}}]);
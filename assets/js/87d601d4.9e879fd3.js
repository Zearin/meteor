"use strict";(self.webpackChunkmeteor=self.webpackChunkmeteor||[]).push([[894],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1904:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={},l="Recipe",p={unversionedId:"concepts/recipe",id:"concepts/recipe",isDocsHomePage:!1,title:"Recipe",description:"A recipe is a set of instructions and configurations defined by user, and in Meteor they are used to define how a particular job will be performed. It should contain instruction about the source from which the metadata will be fetched, information about metadata processors and the destination is to be defined as sinks of metadata.",source:"@site/docs/concepts/recipe.md",sourceDirName:"concepts",slug:"/concepts/recipe",permalink:"/meteor/docs/concepts/recipe",editUrl:"https://github.com/odpf/meteor/edit/master/docs/docs/concepts/recipe.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Concepts",permalink:"/meteor/docs/concepts/overview"},next:{title:"Source",permalink:"/meteor/docs/concepts/source"}},c=[{value:"Writing a Recipe for Meteor",id:"writing-a-recipe-for-meteor",children:[{value:"Glossary Table",id:"glossary-table",children:[]}]},{value:"Dynamic recipe value",id:"dynamic-recipe-value",children:[]},{value:"Sample Usage",id:"sample-usage",children:[]}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"recipe"},"Recipe"),(0,i.kt)("p",null,"A recipe is a set of instructions and configurations defined by user, and in Meteor they are used to define how a particular job will be performed. It should contain instruction about the ",(0,i.kt)("inlineCode",{parentName:"p"},"source")," from which the metadata will be fetched, information about metadata ",(0,i.kt)("inlineCode",{parentName:"p"},"processors")," and the destination is to be defined as ",(0,i.kt)("inlineCode",{parentName:"p"},"sinks")," of metadata."),(0,i.kt)("p",null,"The recipe should contain about ",(0,i.kt)("strong",{parentName:"p"},"only one")," ",(0,i.kt)("inlineCode",{parentName:"p"},"source")," since we wish to have a seperate job for different extractors, hence keeping them isolated. Should have ",(0,i.kt)("strong",{parentName:"p"},"atleast one")," destination of metadata mentioned in ",(0,i.kt)("inlineCode",{parentName:"p"},"sinks"),", and the ",(0,i.kt)("inlineCode",{parentName:"p"},"processors")," field is optional but can have multiple processors."),(0,i.kt)("p",null,"Recipe is a yaml file, follows a structure as shown below and needs to passed as a individual file or as a bunch of recipes contained in a directory as shown in ",(0,i.kt)("a",{parentName:"p",href:"/meteor/docs/concepts/recipe#sample-usage"},"sample usage"),"."),(0,i.kt)("h2",{id:"writing-a-recipe-for-meteor"},"Writing a Recipe for Meteor"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"sample-recipe.yaml"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'name: main-kafka-production # unique recipe name as an ID\nversion: v1beta1 #recipe version\nsource: # required - for fetching input from sources\n name: kafka # required - collector to use (e.g. bigquery, kafka)\n config:\n   broker: "localhost:9092"\nsinks: # required - at least 1 sink defined\n  - name: http\n    config:\n      method: POST\n      url: "https://example.com/metadata"\n  - name: console\nprocessors: # optional - metadata processors\n  - name: metadata\n    config:\n      foo: bar\n      bar: foo\n')),(0,i.kt)("h3",{id:"glossary-table"},"Glossary Table"),(0,i.kt)("p",null,"Contains details about the ingridients of our recipe. The ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," of each source, sinks and processors differs as different data source required different kinds of credentials, please refer more about them in further reference section."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Requirement"),(0,i.kt)("th",{parentName:"tr",align:"left"},"further reference"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},"unique")," recipe name, will be used as ID for job"),(0,i.kt)("td",{parentName:"tr",align:"left"},"required"),(0,i.kt)("td",{parentName:"tr",align:"left"},"N/A")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"version")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Specify the version of recipe being used"),(0,i.kt)("td",{parentName:"tr",align:"left"},"required"),(0,i.kt)("td",{parentName:"tr",align:"left"},"N/A")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"source")),(0,i.kt)("td",{parentName:"tr",align:"left"},"contains details about the source of metadata extraction"),(0,i.kt)("td",{parentName:"tr",align:"left"},"required"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/meteor/docs/concepts/source"},"source"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"sinks")),(0,i.kt)("td",{parentName:"tr",align:"left"},"defines the final destination's of extracted and processed metadata"),(0,i.kt)("td",{parentName:"tr",align:"left"},"required"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/meteor/docs/concepts/sink"},"sink"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"processors")),(0,i.kt)("td",{parentName:"tr",align:"left"},"used process the metadata before sinking"),(0,i.kt)("td",{parentName:"tr",align:"left"},"optional"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/meteor/docs/concepts/processor"},"processor"))))),(0,i.kt)("h2",{id:"dynamic-recipe-value"},"Dynamic recipe value"),(0,i.kt)("p",null,"Meteor reads recipe using ",(0,i.kt)("a",{parentName:"p",href:"https://golang.org/pkg/text/template/"},"go template"),", which means you can put a variable instead of static value in a recipe. Environment variables with prefix ",(0,i.kt)("inlineCode",{parentName:"p"},"METEOR_"),", such as ",(0,i.kt)("inlineCode",{parentName:"p"},"METEOR_MONGODB_PASS"),", will be used as the template data for the recipe. This is to allow you to skip creating recipes containing the credentials of datasource."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"recipe-with-variable.yaml"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'name: sample-recipe\nversion: v1beta1\nsource:\n  name: mongodb\n  config:\n    user_id: {{ .mongodb_user }}\n    # wrap it with double quotes to make sure value is read as a string\n    password: "{{ .mongodb_pass }}"\nsinks:\n  - name: http\n    config:\n      method: POST\n      url: "https://example.com/metadata"\n')),(0,i.kt)("h2",{id:"sample-usage"},"Sample Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"#setup environment variables\n> export METEOR_MONGODB_USER=admin\n> export METEOR_MONGODB_PASS=1234\n#run a single recipe\n> meteor run recipe-with-variable.yaml\n#run multiple recipes contained in single directory\n> meteor rundir path/directory-of-recipes\n")))}m.isMDXComponent=!0}}]);
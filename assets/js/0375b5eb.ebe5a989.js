"use strict";(self.webpackChunkmeteor=self.webpackChunkmeteor||[]).push([[2],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6357:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={},i="Installation",l={unversionedId:"guides/installation",id:"guides/installation",isDocsHomePage:!1,title:"Installation",description:"Meteor can be installed currently by one of the following ways:",source:"@site/docs/guides/0_installation.md",sourceDirName:"guides",slug:"/guides/installation",permalink:"/meteor/docs/guides/installation",editUrl:"https://github.com/odpf/meteor/edit/master/docs/docs/guides/0_installation.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/meteor/docs/guides/introduction"},next:{title:"Plugins",permalink:"/meteor/docs/guides/list_Plugins"}},s=[{value:"Using HomeBrew",id:"using-homebrew",children:[]},{value:"Binary from releases",id:"binary-from-releases",children:[]},{value:"Using docker image",id:"using-docker-image",children:[]},{value:"Build from source",id:"build-from-source",children:[]}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Meteor can be installed currently by one of the following ways:"),(0,o.kt)("h2",{id:"using-homebrew"},"Using HomeBrew"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# install meteor (requires homebrew installed)\n$ brew install odpf/taps/meteor\n\n# Get info about meteor\n$ meteor\n\n# list down all the supported extractors, sinks, and processors\n$ meteor list extractors\n")),(0,o.kt)("h2",{id:"binary-from-releases"},"Binary from releases"),(0,o.kt)("p",null,"The binaries are downloadable at the releases tab.\nThere is currently no installer available.\nYou have to add the meteor binary to the PATH environment variable yourself or put the binary in a location that is already in your $PATH (e.g. /usr/local/bin, ...)."),(0,o.kt)("p",null,"Once installed, you should be able to run:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"$ meteor version")),(0,o.kt)("h2",{id:"using-docker-image"},"Using docker image"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# pull\n$ docker pull odpf/meteor\n\n# Get info about commands\n$ docker run --rm odpf/meteor\n\n# list down all the extractors currently supported\n$ docker run --rm odpf/meteor meteor list extractors\n")),(0,o.kt)("h2",{id:"build-from-source"},"Build from source"),(0,o.kt)("p",null,"Requires you to have ",(0,o.kt)("inlineCode",{parentName:"p"},"git")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"golang (version 1.16 or above)")," installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#clone repo\n$ git clone https://github.com/odpf/meteor.git\n\n$ cd meteor\n\n$ make build\n\n$ ./meteor --help\n")))}u.isMDXComponent=!0}}]);